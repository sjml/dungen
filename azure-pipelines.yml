trigger:
- master


jobs:
- job: macOS
  pool:
    vmImage: 'macos-latest'
  steps:
  - task: Xcode@5
    displayName: 'Build with Xcode'
    inputs:
      actions: 'build'
      scheme: ''
      sdk: 'macosx'
      configuration: 'Release'
      xcWorkspacePath: 'DunGen.xcodeproj'
      xcodeVersion: 10
  - task: CmdLine@2
    displayName: 'Copy .app to staging'
    inputs:
      script: 'cp -R build/Release/Dungen.app $(Build.ArtifactStagingDirectory)'
  - task: CopyFiles@2
    displayName: 'Copy documents to staging'
    inputs:
      Contents: |
        README.md
        docs/acknowledgements.md
      TargetFolder: '$(Build.ArtifactStagingDirectory)'
      flattenFolders: true
  - task: PublishBuildArtifacts@1
    displayName: 'Publish build into pipeline'
    inputs:
      PathtoPublish: '$(Build.ArtifactStagingDirectory)'
      ArtifactName: 'Mac Build'
      publishLocation: 'Container'

- job: Windows
  pool:
    vmImage: 'vs2017-win2016'
  steps:
  - task: VSBuild@1
    displayName: 'Build with MSBuild'
    inputs:
      solution: 'platform/windows/DunGen/DunGen.vcxproj'
      vsVersion: '15.0'
      configuration: 'Release'
      maximumCpuCount: true
      msbuildArchitecture: 'x64'
  - task: CmdLine@2
    displayName: 'Copy Resources to staging'
    inputs:
      script: 'xcopy build\Release\Resources $(Build.ArtifactStagingDirectory)\Resources /E /I'
  - task: CopyFiles@2
    displayName: 'Copy .exe and documents to staging'
    inputs:
      SourceFolder: ''
      Contents: |
        build/Release/DunGen.exe
        README.md
        docs/acknowledgements.md
      TargetFolder: '$(Build.ArtifactStagingDirectory)'
      flattenFolders: true
  - task: PublishBuildArtifacts@1
    displayName: 'Publish build into pipeline'
    inputs:
      PathToPublish: '$(Build.ArtifactStagingDirectory)'
      ArtifactName: 'Windows Build'
      publishLocation: 'Container'
  
- job: Linux
  pool: 
    vmImage: 'ubuntu-latest'
  steps:
  - task: CmdLine@2
    displayName: 'Install dependencies'
    inputs:
      script: |
        sudo apt -y update
        sudo apt-get install cmake xorg-dev libx11-dev libglu1-mesa-dev libglew1.5 libglew1.5-dev libglu1-mesa libglu1-mesa-dev libgl1-mesa-glx libgl1-mesa-dev
  - task: CmdLine@2
    displayName: 'Generate Makefiles'
    inputs:
      script: 'cd build; cmake -G "Unix Makefiles" ..'
  - task: CmdLine@2
    displayName: 'Build with make'
    inputs:
      script: 'cd build; make'
  - task: CmdLine@2
    displayName: 'Copy Resources to staging'
    inputs:
      script: 'cp -R build/Resources $(Build.ArtifactStagingDirectory)'
  - task: CopyFiles@2
    displayName: 'Copy executable and documents to staging'
    inputs:
      SourceFolder: ''
      Contents: |
        build/DunGen
        README.md
        docs/acknowledgements.md
      TargetFolder: '$(Build.ArtifactStagingDirectory)'
      flattenFolders: true
  - task: PublishBuildArtifacts@1
    displayName: 'Publish build into pipeline'
    inputs:
      PathToPublish: '$(Build.ArtifactStagingDirectory)'
      ArtifactName: 'Linux Build'
      publishLocation: 'Container'