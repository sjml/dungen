trigger:
  batch: true
  branches:
    include:
    - master
    - refs/tags/v*

jobs:
- job: macOS
  pool:
    vmImage: 'macos-latest'
  steps:
  - task: Bash@3
    displayName: 'Set build label'
    inputs:
      targetType: 'inline'
      script: 'label=$(buildscripts/getTag.sh);echo "##vso[task.setvariable variable=label]$label"'
  - task: Xcode@5
    displayName: 'Build macOS version with Xcode'
    inputs:
      actions: 'build'
      scheme: 'DunGen (Release)'
      sdk: 'macosx'
      configuration: 'Release'
      xcWorkspacePath: 'DunGen.xcodeproj'
      xcodeVersion: 10
  - task: CmdLine@2
    displayName: 'Copy documents to build directory'
    inputs:
      script: 'cp README.md build/Release; cp docs/acknowledgements.md build/Release'
  - task: CmdLine@2
    displayName: 'Zip up build artifact'
    inputs:
      script: 'cd build/Release; zip -r "DunGen-Mac-$LABEL.zip" DunGen.app README.md acknowledgements.md'
  - task: CmdLine@2
    displayName: 'Copy artifact to staging'
    inputs:
      script: 'cp "build/Release/DunGen-Mac-$LABEL.zip" $(Build.ArtifactStagingDirectory)'
  - task: PublishBuildArtifacts@1
    displayName: 'Publish build into pipeline'
    inputs:
      PathtoPublish: '$(Build.ArtifactStagingDirectory)'
      ArtifactName: 'Mac Build'
      publishLocation: 'Container'

- job: Windows
  pool:
    vmImage: 'windows-latest'
  steps:
  - task: Bash@3
    displayName: 'Set build label'
    inputs:
      targetType: 'inline'
      script: 'label=$(buildscripts/getTag.sh);echo "##vso[task.setvariable variable=label]$label"'
  - task: VSBuild@1
    displayName: 'Build with MSBuild'
    inputs:
      solution: 'platform/windows/DunGen/DunGen.vcxproj'
      vsVersion: '16.0'
      configuration: 'Release'
      maximumCpuCount: true
      msbuildArchitecture: 'x86'
  - task: CopyFiles@2
    displayName: 'Copy documents to build directory'
    inputs:
      SourceFolder: ''
      Contents: |
        README.md
        docs/acknowledgements.md
      TargetFolder: 'build/Release'
      flattenFolders: true
  - task: PowerShell@2
    displayName: 'Zip up build artifact'
    inputs:
      workingDirectory: 'build/Release'
      targetType: 'inline'
      script: 'Compress-Archive -Path .\DunGen.exe, .\Resources, .\README.md, .\acknowledgements.md -CompressionLevel Optimal -DestinationPath .\DunGen-Windows-$env:LABEL.zip'
  - task: PowerShell@2
    displayName: 'Copy artifact to staging'
    inputs:
      targetType: 'inline'
      script: 'Get-ChildItem Env:; Copy-Item .\build\Release\DunGen-Windows-$env:LABEL.zip -Destination $(Build.ArtifactStagingDirectory)'
  - task: PublishBuildArtifacts@1
    displayName: 'Publish build into pipeline'
    inputs:
      PathToPublish: '$(Build.ArtifactStagingDirectory)'
      ArtifactName: 'Windows Build'
      publishLocation: 'Container'

- job: Linux
  pool:
    vmImage: 'ubuntu-latest'
  steps:
  - task: Bash@3
    displayName: 'Set build label'
    inputs:
      targetType: 'inline'
      script: 'label=$(buildscripts/getTag.sh);echo "##vso[task.setvariable variable=label]$label"'
  - task: CmdLine@2
    displayName: 'Install dependencies'
    inputs:
      script: |
        sudo apt -y update
        sudo apt-get -y install cmake xorg-dev libx11-dev libglu1-mesa-dev libglew1.5 libglew1.5-dev libglu1-mesa libglu1-mesa-dev libgl1-mesa-glx libgl1-mesa-dev
  - task: CmdLine@2
    displayName: 'Generate Makefiles'
    inputs:
      script: 'cd build; cmake -G "Unix Makefiles" ..'
  - task: CmdLine@2
    displayName: 'Build with make'
    inputs:
      script: 'cd build; make'
  - task: CmdLine@2
    displayName: 'Copy documents to build directory'
    inputs:
      script: 'cp README.md build/; cp docs/acknowledgements.md build/'
  - task: CmdLine@2
    displayName: 'Zip up build artifact'
    inputs:
      script: 'cd build; zip -r "DunGen-Linux-$LABEL.zip" DunGen README.md acknowledgements.md'
  - task: CmdLine@2
    displayName: 'Copy artifact to staging'
    inputs:
      script: 'cp "build/DunGen-Linux-$LABEL.zip" $(Build.ArtifactStagingDirectory)'
  - task: PublishBuildArtifacts@1
    displayName: 'Publish build into pipeline'
    inputs:
      PathToPublish: '$(Build.ArtifactStagingDirectory)'
      ArtifactName: 'Linux Build'
      publishLocation: 'Container'
