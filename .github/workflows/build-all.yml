name: Build DunGen - all platforms

on: [push]

jobs:
  
  build-mac:
    runs-on: macos-11
    steps:
      - name: Check out repository
        uses: actions/checkout@v2
      - name: Install dependencies
        run: |
          brew install meson
      - name: Build release version
        run: |
          buildscripts/releases/macOS.sh
      # no unit tests on macOS since there's no good way to swap out the rendering backend
      # - name: Run unit tests
      #   run: |
      #     build/DunGen_dist/DunGen.app/Contents/MacOS/DunGen startup=_testing.UnitTest

  build-windows:
    runs-on: windows-2019
    steps:
      - name: Check out respository
        uses: actions/checkout@v2
      - name: Install dependencies
        shell: powershell
        run: |
          python -m pip install meson
          python -m pip install ninja
      - name: Build release version
        run: |
          $vsPath = &(Join-Path ${env:ProgramFiles(x86)} "\Microsoft Visual Studio\Installer\vswhere.exe") -property installationpath
          Import-Module (Join-Path $vsPath "Common7\Tools\Microsoft.VisualStudio.DevShell.dll")
          Enter-VsDevShell -VsInstallPath $vsPath -SkipAutomaticLocation
          buildscripts/releases/windows.ps1
      - name: Run unit tests
        run: |
          build/DunGen_dist/DunGen.exe startup=_testing.UnitTest

  build-linux:
    runs-on: ubuntu-20.04
    steps:
      - name: Check out repository
        uses: actions/checkout@v2
      - name: Install dependencies
        run: |
          sudo apt install meson build-essential clang libx11-dev libxi-dev libxcursor-dev libgl-dev
      - name: Build release version
        run: |
          buildscripts/releases/linux.sh
      - name: Run unit tests
        uses: GabrielBB/xvfb-action@v1
        with:
          run: |
            build/DunGen_dist/DunGen startup=_testing.UnitTest
  
  build-wasm:
    runs-on: ubuntu-20.04
    steps:
      - name: Check out repository
        uses: actions/checkout@v2
      - name: Install dependencies
        run: |
          sudo apt install meson build-essential
          git clone https://github.com/emscripten-core/emsdk.git ../emsdk
          ../emsdk/emsdk install $(cat platform/WebAssembly/EMSDK_VERSION.txt)
          ../emsdk/emsdk activate $(cat platform/WebAssembly/EMSDK_VERSION.txt)
          echo "[constants]" > local/wasm-cross-constants.txt
          echo "EMSDK_BASE = '$(pwd)/../emsdk/upstream/emscripten'" >> local/wasm-cross-constants.txt
      - name: Build release version
        run: |
          buildscripts/releases/wasm.sh

