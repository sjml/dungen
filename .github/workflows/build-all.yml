name: Build DunGen - all platforms

on: [push]

jobs:
  
  build-mac:
    runs-on: macos-11
    steps:
      - name: Check out repository
        uses: actions/checkout@v2
      - name: Install dependencies
        run: |
          brew install meson
      - name: Build release version
        run: |
          buildscripts/releases/macOS.sh
      - name: Upload built artifacts
        uses: actions/upload-artifact@v2
        with:
          name: DunGen-Mac
          path: build/DunGen_dist

  build-windows:
    runs-on: windows-2019
    steps:
      - name: Check out respository
        uses: actions/checkout@v2
      - name: Install dependencies
        shell: powershell
        run: |
          python -m pip install meson
          python -m pip install ninja
      - name: Build release version
        run: |
          $vsPath = &(Join-Path ${env:ProgramFiles(x86)} "\Microsoft Visual Studio\Installer\vswhere.exe") -property installationpath
          Import-Module (Join-Path $vsPath "Common7\Tools\Microsoft.VisualStudio.DevShell.dll")
          Enter-VsDevShell -VsInstallPath $vsPath -SkipAutomaticLocation
          buildscripts/releases/windows.ps1
      - name: Run unit tests
        run: |
          build/DunGen_dist/DunGen.exe startup=_testing.UnitTest
      - name: Upload built artifacts
        uses: actions/upload-artifact@v2
        with:
          name: DunGen-Windows
          path: build/DunGen_dist

  build-linux:
    runs-on: ubuntu-20.04
    steps:
      - name: Check out repository
        uses: actions/checkout@v2
      - name: Install dependencies
        run: |
          sudo apt install meson build-essential clang libx11-dev libxi-dev libxcursor-dev libgl-dev
      - name: Build release version
        run: |
          buildscripts/releases/linux.sh
      - name: Run unit tests
        uses: GabrielBB/xvfb-action@v1
        with:
          run: |
            build/DunGen_dist/DunGen startup=_testing.UnitTest
      - name: Upload built artifacts
        uses: actions/upload-artifact@v2
        with:
          name: DunGen-Linux
          path: build/DunGen_dist
  
  build-wasm:
    runs-on: ubuntu-20.04
    steps:
      - name: Check out repository
        uses: actions/checkout@v2
      - uses: actions/setup-python@v1
        with:
          python-version: '3.x'
      - name: Install dependencies
        run: |
          pip install meson ninja
          git clone https://github.com/emscripten-core/emsdk.git ../emsdk
          ../emsdk/emsdk install $(cat platform/WebAssembly/EMSDK_VERSION.txt)
          ../emsdk/emsdk activate $(cat platform/WebAssembly/EMSDK_VERSION.txt)
          echo "[constants]" > local/wasm-cross-constants.txt
          echo "EMSDK_BASE = '$(pwd)/../emsdk/upstream/emscripten'" >> local/wasm-cross-constants.txt
      - name: Build release version
        run: |
          buildscripts/releases/wasm.sh
      - name: Upload built artifacts
        uses: actions/upload-artifact@v2
        with:
          name: DunGen-Web
          path: build/DunGen_dist

  # if a release tag (starting with "v" as in "v1.0.2", has been made,
  #   prep a draft release and add artifacts to it
  # TODO: rename the archives with the version string
  generate-release:
    runs-on: ubuntu-20.04
    # commenting out conditional to see if this works ::fingers-crossed::
    # if: startsWith(github.ref, 'refs/tags/v')
    needs: [build-mac, build-windows, build-linux, build-wasm]
    steps:
      - name: Check out repository
        uses: actions/checkout@v2
      - name: Install dependencies
        run: |
          sudo apt install zip
      - name: Download builds
        uses: actions/download-artifact@v2
        with:
          path: build_artifacts
      - name: Fix permissions
        working-directory: build_artifacts
        run: |
          chmod +x DunGen-Mac/DunGen.app/Contents/MacOS/DunGen
          chmod +x DunGen-Linux/DunGen
      - name: Create archives
        working-directory: build_artifacts
        run: |
          tar -czf DunGen-Mac.tar.gz DunGen-Mac
          zip -r -9 DunGen-Windows.zip DunGen-Windows
          tar -czf DunGen-Linux.tar.gz DunGen-Linux
          tar -czf DunGen-Web.tar.gz DunGen-Web
      - name: Make draft release
        uses: softprops/action-gh-release@v1
        with:
          draft: true
          body: <insert release notes here>
          files: |
            build_artifacts/*.tar.gz
            build_artifacts/*.zip
