Refactoring:
	TileSets
		- lower-level container
		- make proper sets
		- union and intersection functions
		- get list

	Regions
		- higher-level simulation object
		- TileSets
		- Attributes
		- Owners (agent, can be nil)
		- get checked for outlines

-------- sort above before calling primordial age finished; below can wait, but then use water (see below) as testing ground before moving on to more complicated dwarves

New Data Type: 
	Agents/Entities
		- Domain (Region)
		----- everything else an attribute in SQL
		- Name: "Handsome Pete", "Mzulft Tribe", "Pythian Aquifer"
		- Type: "Individual", "Civilization", "Natural"
		- Class: "Adventurer", "Dwarves", "Water"
		- Alignment: "Lawful", "Chaotic", "Hungry"


Agents "Encounter" tiles
	- whether they're dwarves digging new open spaces, primordial processes carving stuff, or adventurers wandering

Idea 1: EncounterTriggers
	- list of strings on tiles and regions that point to simulation elements which get fired when an agent comes in
		- if triggers were first-class data on tiles/regions then the engine could do the "get triggers" step...
		- implement in Lua first, wait for it to be a bottleneck
	- just do as standard string attribute with comma or colon separators or something
		- consider a separate attribute of NumTriggers?
	-  difference between Water finds Gold and Gold finds Water?
		- water finds gold: hollow out the space, wash gold downstream as we continue
		- gold finds water: have hollow gold and continue, trace river downstream to add some gold down there
			- or maybe it just hollows it like everything else and we move on?

Idea 2: Encounter Table
	- 2d lookup of possible response? 
	- upside: easy to see when we're missing something obvious; easy to add new encounters
	- how to code the entries, though? IDs? attributes? (slow-ass lookup on every encounter eek) classes? 
		- nest it? "PrimordialxIndividual" then points to another lookup table? 
	- would work?: "type:Individual"X"class:Primordial"

Encounter
	- a named simulation element that gets fired by triggers
	- tile register "EncounterTile"
	- agent register "EncounterAgent"

Encounter resolution
	- Check tile for individual triggers
		- resolve
	- Each region that contains tile for triggers

Treat water as an agent
	- Encounters a plague chamber, washes it downstream
	- Encounters another chamber, creates waterfall and continues flow
	- encounters magma; creates geyser if near surface or steam pocket if not
	- etc.

